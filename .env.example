# Database Configuration# ===================================

DATABASE_URL="postgresql://username:password@localhost:5432/penny_db"# PENNYPROTECT CLOUD DEPLOYMENT GUIDE

# ===================================

# Session Configuration#

SESSION_SECRET="your-super-secret-session-key-change-this-in-production"# RECOMMENDED CLOUD DEPLOYMENT STACK:

# 

# Email Configuration (Optional)# üöÄ BACKEND API: Railway (https://railway.app)

SMTP_HOST="smtp.gmail.com"#    - Easiest deployment, connects directly to GitHub

SMTP_PORT="587"#    - Auto-deploys on git push, built-in PostgreSQL

SMTP_USER="your-email@gmail.com"#    - Free tier: $5/month credit, perfect for development

SMTP_PASS="your-app-password"#

# ü§ñ AI SERVICE: Modal (https://modal.com) 

# Twilio Configuration (Optional)#    - Perfect for AI workloads with pay-per-use GPU scaling

TWILIO_ACCOUNT_SID="your-twilio-account-sid"#    - Handles YOLO, facial recognition, behavioral analysis

TWILIO_AUTH_TOKEN="your-twilio-auth-token"#    - Only pay for actual compute time used

TWILIO_PHONE_NUMBER="your-twilio-phone-number"#

# üåê FRONTEND: Vercel (https://vercel.com)

# AI Services Configuration#    - Best for React/Next.js applications

OPENAI_API_KEY="your-openai-api-key-here"#    - Global CDN, automatic HTTPS, GitHub integration

#    - Generous free tier for personal/team projects

# AWS Configuration (Optional)#

AWS_ACCESS_KEY_ID="your-aws-access-key"# üìä DATABASE: Supabase (https://supabase.com)

AWS_SECRET_ACCESS_KEY="your-aws-secret-key"#    - PostgreSQL with built-in auth and real-time features

AWS_REGION="us-west-2"#    - Free tier: 500MB database, 2GB bandwidth

AWS_S3_BUCKET="your-s3-bucket-name"#    - Alternative: Railway PostgreSQL add-on

#

# Modal Configuration (for AI service deployment)# üîÑ CACHE: Upstash Redis (https://upstash.com)

MODAL_TOKEN_ID="your-modal-token-id"#    - Serverless Redis with generous free tier

MODAL_TOKEN_SECRET="your-modal-token-secret"#    - Pay-per-request pricing, perfect for variable workloads

#

# WebSocket & Redis Configuration# üåê LEARN MORE: https://www.pennyagents.com/docs

REDIS_URL="redis://localhost:6379"#

REDIS_PASSWORD=""# ===================================

# CLOUD DEPLOYMENT CONFIGURATION

# Application Configuration# ===================================

NODE_ENV="development"

PORT="3001"# Database Configuration (Cloud)

FRONTEND_URL="http://localhost:5173"# Recommended: Supabase (free tier) or Railway PostgreSQL

DATABASE_URL=postgresql://postgres:your_password@db.your_project_ref.supabase.co:5432/postgres

# Security Configuration# Alternative Railway: postgresql://postgres:password@containers-us-west-xxx.railway.app:5432/railway

JWT_SECRET="your-jwt-secret-key-change-this"DB_SSL_MODE=require

BCRYPT_ROUNDS="12"

# Node.js Environment

# Camera ConfigurationNODE_ENV=production

MAX_CAMERAS_PER_STORE="10"PORT=3001

CAMERA_STREAM_TIMEOUT="30000"

# Security Configuration

# AI Processing ConfigurationJWT_SECRET=your-super-secure-256-bit-secret-key-here-change-this-in-production

AI_CONFIDENCE_THRESHOLD="0.7"ENCRYPTION_KEY=your-encryption-key-32-characters

FRAME_PROCESSING_RATE="1"PASSWORD_RESET_SECRET=your-password-reset-secret-key

MAX_QUEUE_SIZE="1000"EMAIL_VERIFICATION_SECRET=your-email-verification-secret-key

TWO_FACTOR_SECRET=your-2fa-secret-key

# Monitoring & Logging

LOG_LEVEL="info"# Session Configuration

ENABLE_ANALYTICS="true"SESSION_TIMEOUT=24h

METRICS_COLLECTION="true"REFRESH_TOKEN_EXPIRY=7d

ACCOUNT_LOCKOUT_ATTEMPTS=5

# Cloud StorageACCOUNT_LOCKOUT_DURATION=15m

STORAGE_TYPE="local" # Options: local, s3, hybrid

LOCAL_STORAGE_PATH="./uploads"# AWS Services Configuration

AWS_ACCESS_KEY_ID=your-aws-access-key-id

# Feature FlagsAWS_SECRET_ACCESS_KEY=your-aws-secret-access-key

ENABLE_FACIAL_RECOGNITION="false"AWS_REGION=us-east-1

ENABLE_BEHAVIOR_ANALYSIS="true"AWS_S3_BUCKET=pennyprotect-evidence

ENABLE_REAL_TIME_ALERTS="true"AWS_CLOUDFRONT_DISTRIBUTION=your-cloudfront-distribution-id

ENABLE_EMAIL_NOTIFICATIONS="false"

ENABLE_SMS_NOTIFICATIONS="false"# AWS Rekognition Settings

AWS_REKOGNITION_COLLECTION_ID=pennyprotect-faces

# Performance SettingsAWS_REKOGNITION_MIN_CONFIDENCE=80

MAX_CONCURRENT_STREAMS="5"AWS_REKOGNITION_MAX_FACES=100

MEMORY_LIMIT="2048"

CPU_LIMIT="2"# AWS SES Configuration

AWS_SES_FROM_EMAIL=notifications@pennyprotect.com

# Development SettingsAWS_SES_REPLY_TO=support@pennyprotect.com

DEBUG="false"AWS_SES_REGION=us-east-1

MOCK_AI_RESPONSES="true"

DEMO_MODE="false"# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key
OPENAI_DEFAULT_MODEL=gpt-4-vision-preview
OPENAI_MAX_TOKENS=4096
OPENAI_TEMPERATURE=0.1
OPENAI_IMAGE_DETAIL=high
OPENAI_FALLBACK_MODEL=gpt-4

# Twilio SMS Configuration
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890
TWILIO_WEBHOOK_URL=https://your-domain.com/api/webhooks/twilio
TWILIO_STATUS_CALLBACK=https://your-domain.com/api/twilio/status

# Email Service Configuration
EMAIL_PROVIDER=smtp
# Options: smtp, sendgrid, aws-ses

# SMTP Configuration (if using EMAIL_PROVIDER=smtp)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=notifications@pennyprotect.com
SMTP_PASS=your-app-password

# SendGrid Configuration (if using EMAIL_PROVIDER=sendgrid)
SENDGRID_API_KEY=SG.your-sendgrid-api-key
SENDGRID_FROM_EMAIL=notifications@pennyprotect.com
SENDGRID_FROM_NAME=PennyProtect Security

# Email Templates
EMAIL_TEMPLATE_DIR=./server/templates/email

# Penny Admin Integration
PENNY_ADMIN_EMAIL=admin@pennyagents.com
PENNY_ADMIN_API_ENDPOINT=https://api.pennyagents.com/v1/incidents
PENNY_ADMIN_API_KEY=pk_live_YOUR_PENNY_KEY
OFFENDER_NETWORK_API_URL=https://api.pennyagents.com/v1/offender-network
OFFENDER_NETWORK_API_KEY=on_live_YOUR_NETWORK_KEY
OFFENDER_NETWORK_AUTO_SUBMIT=true
OFFENDER_NETWORK_MIN_CONFIDENCE=85

# Camera Control (ONVIF)
ONVIF_DISCOVERY_TIMEOUT=10000
ONVIF_COMMAND_TIMEOUT=5000
ONVIF_DEFAULT_USERNAME=admin
ONVIF_DEFAULT_PASSWORD=admin

# Storage Configuration
STORAGE_PROVIDER=hybrid
# Options: local, s3, hybrid

# Local Storage Settings
LOCAL_STORAGE_PATH=./uploads
LOCAL_EVIDENCE_PATH=./uploads/evidence
LOCAL_TEMP_PATH=./uploads/temp

# Storage Retention
EVIDENCE_RETENTION_DAYS=90
TEMP_FILE_RETENTION_HOURS=24
MAX_FILE_SIZE_MB=100

# Redis Configuration (Cloud)
# Recommended: Upstash (serverless, generous free tier)
REDIS_URL=rediss://default:your_password@region-endpoint.upstash.io:6380
# Alternative: Redis Labs or AWS ElastiCache
REDIS_PASSWORD=your-redis-password
REDIS_DB=0
REDIS_KEY_PREFIX=pennyprotect:

# Frontend URLs (Cloud Deployment)
# Deploy frontend to Vercel: https://vercel.com
# Connect your GitHub repo for auto-deployment
CLIENT_URL=https://your-frontend-domain.vercel.app
VITE_API_URL=https://your-api-domain.railway.app
VITE_WS_URL=wss://your-api-domain.railway.app

# Camera Settings
MAX_CAMERAS_PER_STORE=50
STREAM_BUFFER_SIZE=30
ANALYSIS_INTERVAL_MS=1000
CAMERA_STREAM_QUALITY=720p

# AI Service Settings (Cloud Deployment)
# Deploy AI service to Modal: https://modal.com
# Perfect for YOLOv11 AI workloads with pay-per-use GPU scaling
AI_SERVICE_URL=https://your-ai-service.modal.run
AI_SERVICE_TIMEOUT=30000
ENABLE_FACE_RECOGNITION=true
ENABLE_BEHAVIOR_ANALYSIS=true
ENABLE_GAIT_DETECTION=true

# YOLOv11 Model Configuration
YOLO_MODEL_VERSION=11  # Use YOLOv11 (latest generation)
YOLO_MODEL_SIZE=nano   # Options: nano, small, medium, large, extra_large
YOLO_CONFIDENCE_THRESHOLD=0.5
YOLO_IOU_THRESHOLD=0.45
ENABLE_YOLO_TRACKING=true
YOLO_MAX_DETECTIONS=100

# Alert Configuration
ALERT_COOLDOWN_MINUTES=5
MAX_ALERTS_PER_HOUR=50
ENABLE_EMAIL_ALERTS=true
ENABLE_SMS_ALERTS=true
ENABLE_PUSH_NOTIFICATIONS=false

# Multi-tenant Configuration
ENABLE_MULTI_TENANT=true
DEFAULT_TENANT_PLAN=basic
MAX_STORES_PER_TENANT=10
MAX_USERS_PER_STORE=20

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_FAILED_REQUESTS=true

# Monitoring and Logging
LOG_LEVEL=info
LOG_FILE_PATH=./logs/app.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5
ENABLE_REQUEST_LOGGING=true
ENABLE_ERROR_TRACKING=true

# Performance Settings
MAX_CONCURRENT_STREAMS=10
WEBSOCKET_HEARTBEAT_INTERVAL=30000
DATABASE_CONNECTION_POOL_SIZE=20
API_TIMEOUT_MS=30000

# Development/Debug Settings
DEBUG_AI_SERVICE=false
DEBUG_WEBSOCKETS=false
DEBUG_DATABASE=false
ENABLE_CORS=true
CORS_ORIGIN=http://localhost:3000

# Feature Flags
ENABLE_FACIAL_RECOGNITION=true
ENABLE_PTZ_CONTROL=true
ENABLE_AUTO_EVIDENCE_SUBMISSION=true
ENABLE_ANALYTICS_DASHBOARD=true
ENABLE_MOBILE_APP=false

# Health Checks
HEALTH_CHECK_INTERVAL=30000
ENABLE_EXTERNAL_HEALTH_CHECKS=true

# Backup Configuration
ENABLE_AUTO_BACKUP=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=pennyprotect-backups

# ===================================
# DEPLOYMENT CHECKLIST
# ===================================
#
# ‚úÖ BEFORE DEPLOYING:
#
# 1. üóÑÔ∏è  DATABASE SETUP:
#    ‚ñ° Create Supabase project or Railway PostgreSQL
#    ‚ñ° Update DATABASE_URL with connection string
#    ‚ñ° Run database migrations: npm run db:push
#
# 2. üîê SECURITY KEYS:
#    ‚ñ° Generate secure JWT_SECRET (256-bit)
#    ‚ñ° Generate ENCRYPTION_KEY (128-bit)
#    ‚ñ° Update all password/secret placeholders
#
# 3. ‚òÅÔ∏è  CLOUD SERVICES:
#    ‚ñ° Set up AWS account & S3 bucket
#    ‚ñ° Create OpenAI API key
#    ‚ñ° Configure Twilio SMS service
#    ‚ñ° Set up email provider (SendGrid/SMTP)
#    ‚ñ° Create Upstash Redis database
#
# 4. üöÄ DEPLOYMENT PLATFORMS:
#    ‚ñ° Deploy backend to Railway
#    ‚ñ° Deploy AI service to Modal
#    ‚ñ° Deploy frontend to Vercel
#    ‚ñ° Update all URL placeholders
#
# 5. üîó INTEGRATION TESTING:
#    ‚ñ° Test camera stream connections
#    ‚ñ° Verify AI detection pipeline
#    ‚ñ° Test alert notifications (SMS/Email)
#    ‚ñ° Validate evidence storage workflow
#
# üí° QUICK START COMMANDS:
#
# Generate security keys:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# Test database connection:
# npm run db:push
#
# Deploy to Railway:
# railway login && railway deploy
#
# Deploy to Vercel:
# vercel --prod
#
# üìû SUPPORT & DOCUMENTATION:
# üåê Website: https://www.pennyagents.com
# üìö Documentation: https://www.pennyagents.com/docs
# üìß Support: support@pennyagents.com
# üí¨ Sales: sales@pennyagents.com